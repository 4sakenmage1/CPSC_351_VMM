
#include "MemoryManagementUnit.h"
#include "backingStore.h"

#include <iostream>


int main()
{
    MemoryManagementUnit MMU;

    // 1. the logical address generated by the CPU is sent to the MMU where it is divided into a page # and offset
    int logical_address;

    /*
        All 1000 logical addresses read from std input.

        To feed in the addresses.txt file when we run the VMM we use this syntax:

        ./VMManager <addresses.txt 2>&1

        The < 2>&1 is a bash/terminal/ command line operator which reads in values from the file provided.
    */

    // read in a logical address
    cin >> logical_address;

    Address page;
    // MMU reads the logical address, translates the page number and offset, and assigns those values to a page.
    page = MMU.read(logical_address);

    // Check to see if the page's page_number is in the TLB.
    MMU.tlbAccesses(page.address);

    


    
    return 0;
}
